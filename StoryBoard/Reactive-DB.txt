mongo commands

> show dbs
admin   0.000GB
config  0.000GB
dbtest  0.000GB
local   0.000GB

> use admin
switched to db admin

> show roles
{
	"role" : "__queryableBackup",
	"db" : "admin",
	"isBuiltin" : true,
	"roles" : [ ],
	"inheritedRoles" : [ ]
} ...


Before creating an authentication you need to create a super user
so we will be creating in admin database


> use Admin
switched to db Admin

=================Creating a User===================

> use admin
switched to db admin
> db.createUser(
   {
     user: "myUserAdmin",
     pwd: passwordPrompt(), // or cleartext password
     roles: [ { role: "userAdminAnyDatabase", db: "admin" }, "readWriteAnyDatabase" ]
   }
 )
Enter password: myUserAdmin
Successfully added user: {
	"user" : "myUserAdmin",
	"roles" : [
		{
			"role" : "userAdminAnyDatabase",
			"db" : "admin"
		},
		"readWriteAnyDatabase"
	]
}


> db.getUsers()
[
	{
		"_id" : "admin.myUserAdmin",
		"userId" : UUID("26ed4383-c3f6-4f2f-83e0-c64234e9adfc"),
		"user" : "myUserAdmin",
		"db" : "admin",
		"roles" : [
			{
				"role" : "userAdminAnyDatabase",
				"db" : "admin"
			},
			{
				"role" : "readWriteAnyDatabase",
				"db" : "admin"
			}
		],
		"mechanisms" : [
			"SCRAM-SHA-1",
			"SCRAM-SHA-256"
		]
	}
]


docker run -p 27018:27017 -v /home/nitish/Desktop/Volume/mongoDB:/data/db mongo:4.4-bionic --auth


Types of login to mongoDb 

1. mongo -u myUserAdmin -p myUserAdmin

2.  > mongo
    > use admin
    > db.auth("myUserAdmin","myUserAdmin")


-------Another User------------------
=====================================
> use test
switched to db test
> db.createUser(
   {
     user: "myTester",
     pwd:  passwordPrompt(),   // or cleartext password
     roles: [ { role: "readWrite", db: "test" },
              { role: "read", db: "reporting" } ]
   }
 )
Enter password: myTester
Successfully added user: {
	"user" : "myTester",
	"roles" : [
		{
			"role" : "readWrite",
			"db" : "test"
		},
		{
			"role" : "read",
			"db" : "reporting"
		}
	]
}


> mongo -u myTester -p myTester --authenticationDatabase test


> use test
> db.auth("myTester","myTester")
> db.changeUserPassword("myTester","myTester1")